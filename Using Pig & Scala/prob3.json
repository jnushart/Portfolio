{"paragraphs":[{"text":"val nfl = spark.read.format(\"csv\").option(\"header\", true).option(\"inferSchema\", true).load(\"/user/maria_dev/final/NFLPlayByPlay.csv\")\nval nfl2 = nfl.filter($\"play_type\" === \"run\" || $\"play_type\" === \"pass\")\n  .withColumn(\"play_location\", when(col(\"play_type\") === \"run\", col(\"run_location\"))\n  .when(col(\"play_type\") === \"pass\", col(\"pass_location\"))\n  .otherwise(\"N/A\"))\n  .filter($\"play_location\" !== \"N/A\")\n  .filter($\"play_location\" !== \"NA\")\nval nfl3 = nfl2.groupBy($\"defteam\", $\"play_type\", $\"play_location\").agg(count($\"play_id\").as(\"Plays\"), avg(\"yards_gained\").as(\"avgYards\"))\nval worst = nfl3.groupBy($\"play_type\".as(\"play_type1\"), $\"play_location\".as(\"play_location1\")).agg(max(\"avgYards\").as(\"maxYards\"))\nval yardTopByJoin = nfl3.join(broadcast(worst),\n    ($\"play_type1\" === $\"play_type\") && ($\"avgYards\" === $\"maxYards\") && ($\"play_location\" === $\"play_location1\"))\nyardTopByJoin.createOrReplaceTempView(\"answerTable\")\nspark.sqlContext.sql(\"SELECT defteam, play_type, play_location, Plays, avgYards FROM answerTable order by avgYards DESC\").show","user":"anonymous","dateUpdated":"2020-05-03T20:45:57+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"nfl: org.apache.spark.sql.DataFrame = [play_id: int, game_id: int ... 253 more fields]\nwarning: there were two deprecation warnings; re-run with -deprecation for details\nnfl2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [play_id: int, game_id: int ... 254 more fields]\nnfl3: org.apache.spark.sql.DataFrame = [defteam: string, play_type: string ... 3 more fields]\nworst: org.apache.spark.sql.DataFrame = [play_type1: string, play_location1: string ... 1 more field]\nyardTopByJoin: org.apache.spark.sql.DataFrame = [defteam: string, play_type: string ... 6 more fields]\n+-------+---------+-------------+-----+------------------+\n|defteam|play_type|play_location|Plays|          avgYards|\n+-------+---------+-------------+-----+------------------+\n|    DET|     pass|       middle| 1278| 9.309859154929578|\n|     NO|     pass|         left| 1997| 7.741612418627942|\n|     TB|     pass|        right| 2073| 7.447178002894356|\n|    LAC|      run|         left|  237| 5.527426160337553|\n|    JAX|      run|        right|  340|5.1382352941176475|\n|     LA|      run|       middle|  407| 5.041769041769042|\n+-------+---------+-------------+-----+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1588531183836_-886237977","id":"20200503-183943_1617889428","dateCreated":"2020-05-03T18:39:43+0000","dateStarted":"2020-05-03T20:45:57+0000","dateFinished":"2020-05-03T20:46:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:559"},{"text":"val nfl = spark.read.format(\"csv\").option(\"header\", true).option(\"inferSchema\", true).load(\"/user/maria_dev/final/NFLPlayByPlay.csv\")\nval nfl2 = nfl.filter($\"play_type\" === \"run\" || $\"play_type\" === \"pass\")\n  .withColumn(\"play_location\", when(col(\"play_type\") === \"run\", col(\"run_location\"))\n  .when(col(\"play_type\") === \"pass\", col(\"pass_location\"))\n  .otherwise(\"N/A\"))\n  .filter($\"play_location\" !== \"N/A\")\n  .filter($\"play_location\" !== \"NA\")\nval nfl3 = nfl2.groupBy($\"posteam\", $\"play_type\", $\"play_location\").agg(count($\"play_id\").as(\"Plays\"), avg(\"yards_gained\").as(\"avgYards\"))\nval worst = nfl3.groupBy($\"posteam\".as(\"posteam1\")).agg(max(\"Plays\").as(\"maxPlays\"))\nval yardTopByJoin = nfl3.join(broadcast(worst),\n    ($\"posteam\" === $\"posteam1\") && ($\"Plays\" === $\"maxPlays\"))\nyardTopByJoin.createOrReplaceTempView(\"answerTable\")\nspark.sqlContext.sql(\"SELECT posteam, play_type, play_location, Plays, avgYards FROM answerTable order by Plays DESC\").show(32)","user":"anonymous","dateUpdated":"2020-05-03T21:22:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"nfl: org.apache.spark.sql.DataFrame = [play_id: int, game_id: int ... 253 more fields]\nwarning: there were two deprecation warnings; re-run with -deprecation for details\nnfl2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [play_id: int, game_id: int ... 254 more fields]\nnfl3: org.apache.spark.sql.DataFrame = [posteam: string, play_type: string ... 3 more fields]\nworst: org.apache.spark.sql.DataFrame = [posteam1: string, maxPlays: bigint]\nyardTopByJoin: org.apache.spark.sql.DataFrame = [posteam: string, play_type: string ... 5 more fields]\n+-------+---------+-------------+-----+------------------+\n|posteam|play_type|play_location|Plays|          avgYards|\n+-------+---------+-------------+-----+------------------+\n|    DET|     pass|        right| 2492| 6.352728731942215|\n|     NO|     pass|        right| 2452| 7.368270799347472|\n|    CLE|     pass|        right| 2405| 5.663582842724979|\n|     GB|     pass|        right| 2400|             7.395|\n|     NE|     pass|         left| 2360| 7.470762711864407|\n|    BAL|     pass|        right| 2344|6.0166382252559725|\n|    IND|     pass|        right| 2340| 6.799145299145299|\n|    ATL|     pass|        right| 2330|6.8394849785407725|\n|    DEN|     pass|         left| 2306|7.1760624457935815|\n|    MIA|     pass|        right| 2297| 6.347409664780148|\n|    PHI|     pass|        right| 2294|  6.66870095902354|\n|    ARI|     pass|        right| 2286| 6.622484689413823|\n|    MIN|     pass|        right| 2237| 6.589181940098346|\n|    OAK|     pass|        right| 2183| 6.344938158497481|\n|    SEA|     pass|        right| 2181|  6.94222833562586|\n|    PIT|     pass|        right| 2175| 7.773925104022191|\n|    CIN|     pass|        right| 2170| 6.441013824884792|\n|     KC|     pass|        right| 2154| 6.536675951717735|\n|    CHI|     pass|        right| 2153| 6.855085926614027|\n|    NYG|     pass|        right| 2115| 6.945626477541371|\n|     SF|     pass|        right| 2108| 6.767552182163188|\n|     TB|     pass|        right| 2101|6.9243217515468825|\n|    DAL|     pass|        right| 2100| 7.258571428571429|\n|    NYJ|     pass|        right| 2095|   6.3618138424821|\n|    CAR|     pass|        right| 2044| 6.602739726027397|\n|    BUF|     pass|        right| 2029| 6.536717594874323|\n|    TEN|     pass|        right| 2015| 6.141935483870967|\n|    WAS|     pass|        right| 1985| 6.786901763224181|\n|    HOU|     pass|        right| 1971| 6.616438356164384|\n|     SD|     pass|         left| 1699| 7.821071218363743|\n|    STL|     pass|        right| 1624|5.7573891625615765|\n|    JAC|     pass|        right| 1610| 6.240798502807237|\n+-------+---------+-------------+-----+------------------+\nonly showing top 32 rows\n\n"}]},"apps":[],"jobName":"paragraph_1588531264885_1711509976","id":"20200503-184104_504360647","dateCreated":"2020-05-03T18:41:04+0000","dateStarted":"2020-05-03T21:22:09+0000","dateFinished":"2020-05-03T21:22:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:560"},{"text":"val nfl = spark.read.format(\"csv\").option(\"header\", true).option(\"inferSchema\", true).load(\"/user/maria_dev/final/NFLPlayByPlay.csv\")\nval nfl2 = nfl.filter($\"play_type\" === \"run\" || $\"play_type\" === \"pass\")\n  .withColumn(\"YTG_grouped\", when(col(\"ydstogo\") <=3 , \"1-3\")\n  .when(col(\"ydstogo\") <= 6, \"4-6\")\n  .when(col(\"ydstogo\") <= 9, \"7-9\")\n  .otherwise(\"10+\"))\n  .filter($\"down\" === 3)\n  .withColumn(\"Conversion\", when(col(\"yards_gained\") >= col(\"ydstogo\"), 1)\n  .otherwise(0))\nval nfl3 = nfl2.groupBy($\"YTG_grouped\").agg(count($\"play_id\").as(\"Plays\"), sum(\"Conversion\").as(\"Conversion\"))\nnfl3.createOrReplaceTempView(\"answerTable\")\nspark.sqlContext.sql(\"SELECT YTG_grouped, Plays, conversion, Conversion/Plays AS ConversionPerc FROM answerTable order by ConversionPerc DESC\").show","user":"anonymous","dateUpdated":"2020-05-03T22:09:12+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"nfl: org.apache.spark.sql.DataFrame = [play_id: int, game_id: int ... 253 more fields]\nnfl2: org.apache.spark.sql.DataFrame = [play_id: int, game_id: int ... 255 more fields]\nnfl3: org.apache.spark.sql.DataFrame = [YTG_grouped: string, Plays: bigint ... 1 more field]\n+-----------+-----+----------+-------------------+\n|YTG_grouped|Plays|conversion|     ConversionPerc|\n+-----------+-----+----------+-------------------+\n|        1-3|17887|     10477| 0.5857326550008386|\n|        4-6|16258|      7126|0.43830729487021775|\n|        7-9|13670|      4739| 0.3466715435259693|\n|        10+|18905|      3920| 0.2073525522348585|\n+-----------+-----+----------+-------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1588537282460_-968961003","id":"20200503-202122_1448157154","dateCreated":"2020-05-03T20:21:22+0000","dateStarted":"2020-05-03T22:09:12+0000","dateFinished":"2020-05-03T22:09:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:561"},{"text":"val nfl = spark.read.format(\"csv\").option(\"header\", true).option(\"inferSchema\", true).load(\"/user/maria_dev/final/NFLPlayByPlay.csv\")\nval nfl2 = nfl.filter($\"down\" === 4)\n  .withColumn(\"Conversion\", when(col(\"yards_gained\") >= col(\"ydstogo\"), 1)\n  .otherwise(0))\n  .filter($\"play_type\" !== \"no_play\")\n  .filter($\"play_type\" !== \"NA\")\n  .withColumn(\"ConversionAttempted\", when(col(\"play_type\") === \"pass\" || col(\"play_type\") === \"run\", 1)\n  .otherwise(0))\nval nfl3 = nfl2.groupBy($\"posteam\").agg(count($\"play_id\").as(\"Plays\"), sum(\"Conversion\").as(\"Conversion\"), sum(\"ConversionAttempted\").as(\"ConversionAtt\"))\nnfl3.createOrReplaceTempView(\"answerTable\")\nspark.sqlContext.sql(\"SELECT posteam, Plays, conversion, ConversionAtt ,Conversion/ConversionAtt AS ConversionPerc, ConversionAtt/Plays AS ConversionAttPerc FROM answerTable order by ConversionAttPerc DESC\").show(32)","user":"anonymous","dateUpdated":"2020-05-03T22:30:07+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"nfl: org.apache.spark.sql.DataFrame = [play_id: int, game_id: int ... 253 more fields]\nwarning: there were two deprecation warnings; re-run with -deprecation for details\nnfl2: org.apache.spark.sql.DataFrame = [play_id: int, game_id: int ... 255 more fields]\nnfl3: org.apache.spark.sql.DataFrame = [posteam: string, Plays: bigint ... 2 more fields]\n+-------+-----+----------+-------------+-------------------+-------------------+\n|posteam|Plays|conversion|ConversionAtt|     ConversionPerc|  ConversionAttPerc|\n+-------+-----+----------+-------------+-------------------+-------------------+\n|    JAC|  922|        73|          154|  0.474025974025974|0.16702819956616052|\n|    PHI| 1200|        98|          179|  0.547486033519553|0.14916666666666667|\n|     NO|  981|        88|          142| 0.6197183098591549|0.14475025484199797|\n|    ATL| 1071|        82|          155| 0.5290322580645161|0.14472455648926238|\n|    CLE| 1261|        91|          181| 0.5027624309392266|0.14353687549563837|\n|     GB| 1072|        73|          147| 0.4965986394557823|0.13712686567164178|\n|    STL|  953|        53|          129| 0.4108527131782946| 0.1353620146904512|\n|     LA|  349|        20|           47|  0.425531914893617| 0.1346704871060172|\n|    DET| 1188|        75|          157|0.47770700636942676|0.13215488215488216|\n|    OAK| 1255|        71|          165| 0.4303030303030303|0.13147410358565736|\n|     TB| 1139|        70|          148|0.47297297297297297| 0.1299385425812116|\n|    BUF| 1236|        66|          159|0.41509433962264153|0.12864077669902912|\n|    WAS| 1184|        69|          152|0.45394736842105265|0.12837837837837837|\n|     NE| 1092|        80|          140| 0.5714285714285714| 0.1282051282051282|\n|    BAL| 1225|        76|          156|0.48717948717948717| 0.1273469387755102|\n|    MIA| 1211|        63|          153| 0.4117647058823529| 0.1263418662262593|\n|    NYG| 1174|        68|          147|0.46258503401360546| 0.1252129471890971|\n|     KC| 1221|        77|          150| 0.5133333333333333|0.12285012285012285|\n|    TEN| 1197|        76|          146| 0.5205479452054794|0.12197159565580618|\n|    MIN| 1157|        68|          141|0.48226950354609927|0.12186689714779603|\n|    CHI| 1151|        63|          140|               0.45|0.12163336229365769|\n|    CIN| 1178|        86|          143| 0.6013986013986014|0.12139219015280135|\n|    CAR| 1138|        75|          138| 0.5434782608695652|0.12126537785588752|\n|    DEN| 1213|        70|          147|0.47619047619047616|0.12118713932399011|\n|    DAL| 1077|        74|          128|           0.578125|0.11884865366759517|\n|     SF| 1281|        85|          152| 0.5592105263157895|0.11865729898516784|\n|    HOU| 1243|        67|          145|0.46206896551724136| 0.1166532582461786|\n|    NYJ| 1287|        73|          147| 0.4965986394557823|0.11421911421911422|\n|    JAX|  364|        23|           41| 0.5609756097560976|0.11263736263736264|\n|    SEA| 1182|        69|          133|  0.518796992481203|0.11252115059221658|\n|    IND| 1109|        59|          123| 0.4796747967479675| 0.1109107303877367|\n|     SD|  828|        41|           87|0.47126436781609193|0.10507246376811594|\n+-------+-----+----------+-------------+-------------------+-------------------+\nonly showing top 32 rows\n\n"}]},"apps":[],"jobName":"paragraph_1588537323621_1642391079","id":"20200503-202203_1673661141","dateCreated":"2020-05-03T20:22:03+0000","dateStarted":"2020-05-03T22:30:07+0000","dateFinished":"2020-05-03T22:30:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:562"},{"text":"val nfl = spark.read.format(\"csv\").option(\"header\", true).option(\"inferSchema\", true).load(\"/user/maria_dev/final/NFLPlayByPlay.csv\")\nval penalties = nfl.groupBy($\"penalty_team\").agg(sum(\"penalty_yards\").as(\"penalty_yards\"), count(\"penalty_player_id\").as(\"penalties\"))\n    .filter($\"penalty_team\" !== \"NA\")\nval fumbles = nfl.groupBy($\"fumble_recovery_1_team\").agg(sum(\"fumble_recovery_1_yards\").as(\"fumble_yards\"), count(\"fumble_recovery_1_player_id\").as(\"fumble_recoveries\"))\n    .filter($\"fumble_recovery_1_team\" !== \"NA\")\nval interceptions = nfl.groupBy($\"posteam\").agg(sum(\"interception\").as(\"interceptions\"))\nval join1 = penalties.join(broadcast(fumbles),\n    ($\"penalty_team\" === $\"fumble_recovery_1_team\"))\nval join2 = join1.join(broadcast(interceptions), \n    ($\"penalty_team\" === $\"posteam\"))\njoin2.createOrReplaceTempView(\"answerTable\")\nspark.sqlContext.sql(\"SELECT penalty_team AS Team, penalties, fumble_recoveries, interceptions, (penalties + fumble_recoveries + interceptions) AS Total FROM answerTable Order By Total DESC\").show(32)","user":"anonymous","dateUpdated":"2020-05-04T00:06:16+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"nfl: org.apache.spark.sql.DataFrame = [play_id: int, game_id: int ... 253 more fields]\nwarning: there was one deprecation warning; re-run with -deprecation for details\npenalties: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [penalty_team: string, penalty_yards: double ... 1 more field]\nwarning: there was one deprecation warning; re-run with -deprecation for details\nfumbles: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [fumble_recovery_1_team: string, fumble_yards: double ... 1 more field]\ninterceptions: org.apache.spark.sql.DataFrame = [posteam: string, interceptions: double]\njoin1: org.apache.spark.sql.DataFrame = [penalty_team: string, penalty_yards: double ... 4 more fields]\njoin2: org.apache.spark.sql.DataFrame = [penalty_team: string, penalty_yards: double ... 6 more fields]\n+----+---------+-----------------+-------------+------+\n|Team|penalties|fumble_recoveries|interceptions| Total|\n+----+---------+-----------------+-------------+------+\n| OAK|     1271|              205|        152.0|1628.0|\n|  TB|     1117|              219|        182.0|1518.0|\n| SEA|     1194|              203|        117.0|1514.0|\n| PHI|     1074|              214|        147.0|1435.0|\n| DET|     1093|              179|        161.0|1433.0|\n| BUF|     1079|              191|        156.0|1426.0|\n| DEN|     1080|              185|        143.0|1408.0|\n| CHI|     1007|              227|        173.0|1407.0|\n| ARI|     1010|              212|        183.0|1405.0|\n| BAL|     1077|              186|        140.0|1403.0|\n|  SF|     1093|              190|        115.0|1398.0|\n| DAL|     1070|              189|        131.0|1390.0|\n| WAS|     1009|              223|        151.0|1383.0|\n| NYJ|      993|              199|        183.0|1375.0|\n| CLE|     1011|              191|        172.0|1374.0|\n| HOU|     1008|              188|        140.0|1336.0|\n|  KC|     1026|              186|        112.0|1324.0|\n| CIN|     1022|              157|        144.0|1323.0|\n| TEN|     1006|              165|        147.0|1318.0|\n| MIA|      960|              176|        155.0|1291.0|\n| CAR|      936|              200|        154.0|1290.0|\n| NYG|      916|              193|        165.0|1274.0|\n|  NO|      975|              163|        135.0|1273.0|\n| PIT|      959|              170|        143.0|1272.0|\n| MIN|      937|              170|        131.0|1238.0|\n| IND|      906|              169|        151.0|1226.0|\n|  GB|      951|              172|         96.0|1219.0|\n|  NE|      909|              182|         85.0|1176.0|\n| ATL|      865|              163|        127.0|1155.0|\n| STL|      808|              142|         98.0|1048.0|\n|  SD|      783|              133|        121.0|1037.0|\n| JAC|      614|              149|        121.0| 884.0|\n+----+---------+-----------------+-------------+------+\nonly showing top 32 rows\n\n"}]},"apps":[],"jobName":"paragraph_1588538591902_-1882682754","id":"20200503-204311_2024306474","dateCreated":"2020-05-03T20:43:11+0000","dateStarted":"2020-05-04T00:06:05+0000","dateFinished":"2020-05-04T00:06:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:563"},{"text":"","user":"anonymous","dateUpdated":"2020-05-04T00:24:08+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588547902039_-1543855319","id":"20200503-231822_2062827180","dateCreated":"2020-05-03T23:18:22+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:564"}],"name":"Untitled Note 6","id":"2F724P3SP","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}